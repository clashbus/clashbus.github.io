<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashbus.github.io/news/article-66346.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>SpringBoot中处理的转发与重定向</title>
        <meta name="description" content="转发：一次请求，服务器内部调用另外的组件处理，request和response可以共用，有限制性，只能转发到本应用中的某些资源，页面或者controller请求 课可以访问WEB-INF目录下面的页面" />
        <link rel="icon" href="/assets/website/img/clashbus/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash Bus免费订阅地址官方中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashbus.github.io/news/article-66346.htm" />
    <meta property="og:site_name" content="Clash Bus免费订阅地址官方中文网" />
    <meta property="og:title" content="SpringBoot中处理的转发与重定向" />
    <meta property="og:image" content="https://clashbus.github.io/uploads/20250107/bdca72f73a5364db5a288dd6f833d10b.webp" />
        <meta property="og:release_date" content="2025-03-03T08:14:02" />
    <meta property="og:updated_time" content="2025-03-03T08:14:02" />
        <meta property="og:description" content="转发：一次请求，服务器内部调用另外的组件处理，request和response可以共用，有限制性，只能转发到本应用中的某些资源，页面或者controller请求 课可以访问WEB-INF目录下面的页面" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="SpringBoot中处理的转发与重定向">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/clashbus/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/clashbus/icofont/icofont.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/clashbus/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/clashbus/owl.carousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/clashbus/venobox/venobox.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/clashbus/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-YTD3W50BTE"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-YTD3W50BTE');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top">
        <div class="container d-flex align-items-center">
            <h1 class="logo mr-auto">
                <a href="/" class="xcblog-blog-logo">
                                        <span>Clash Bus</span>
                                    </a>
            </h1>
            <nav class="nav-menu d-none d-lg-block">
                <ul>
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/client.htm">客户端</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                    </ul>
            </nav><!-- .nav-menu -->
        </div>
    </header><!-- End Header -->
    <!-- ======= Hero Section ======= -->
    <section id="hero" class="d-flex align-items-center justify-content-center">
        <div class="container position-relative">
            <h1>SpringBoot中处理的转发与重定向</h1>
            <p class="desc">
                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
            </p>
        </div>
    </section><!-- End Hero -->
    <main id="main">
        <!-- ======= About Section ======= -->
        <section id="about" class="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>转发：一次请求，服务器内部调用另外的组件处理，request和response可以共用，有限制性，只能转发到本应用中的某些资源，页面或者controller请求</p> <p>课可以访问WEB-INF目录下面的页面</p> <p>重定向：两次请求，地址会改变，request和response不能共用，不能直接访问WEB-INF下面的资源，</p> <p>根据所要跳转的资源，可以分为跳转到页面或者跳转到其他controller</p> <p><img fetchpriority="high" decoding="async" alt="" class="has" height="277" src="http://img.555519.xyz/uploads/20221201/7031083fc032fddb6b8de0c8a3c22da1.jpg"></p> <h3 id="-modelandview-">一、返回ModelAndView时的请求转发</h3> <p>当controller中的方法返回ModelAndView的时候，默认是使用的转发。当然，我们也可以显式的指出要使用转发，此时，需在 setViewName()指定的视图前添加forward:，此时springmvc.xml文件中配置的视图解析器将会失效，即需要在setViewName中写上jsp相对于项目根的路径。</p> <p>1：转发到页面</p> <pre class="has"><code class="language-java">/**  * 转发返回ModelAndView对象  * @return  * @throws Exception  */ @RequestMapping("/forwardMAV.do") public ModelAndView forwardMAV()throws Exception{      ModelAndView mv = new ModelAndView();     mv.addObject("type", "转发返回ModelAndView");     //默认情况下使用转发     //mv.setViewName("/result");      //手动显式指定使用转发，此时springmvc.xml配置文件中的视图解析器将会失效     mv.setViewName("forward:/jsp/result.jsp");     return mv; }</code></pre> <p>需要在webapp目录下添加jsp/result.jsp文件：</p> <p>2：转发到controller</p> <p><strong>使用转发跳转到其他controller中</strong></p> <pre class="has"><code class="language-java">@RequestMapping("/forwardMAV.do") public ModelAndView forwardMAV()throws Exception{      ModelAndView mv = new ModelAndView();      //手动显式指定使用转发，此时springmvc.xml配置文件中的视图解析器将会失效     mv.setViewName("forward:other.do");     return mv; }</code></pre> <p>创建OtherController：</p> <pre class="has"><code class="language-java">/**  * 被跳转的controller  */ @Controller public class OtherController {      /**      * 被跳转的controller返回result.jsp      * @return      * @throws Exception      */     @RequestMapping("/other.do")     public ModelAndView other()throws Exception{          ModelAndView mv = new ModelAndView();         mv.addObject("type", "被跳转的controller");          mv.setViewName("result");         return mv;     } }</code></pre> <p>二、返回ModelAndView时的重定向：发送的get请求，参数在url后面</p> <p>如果要实现重定向，则需在setViewName()指定的视图前添加redirect:，此时springmvc.xml文件中配置的视图解析器将会失效，即需要在setViewName中写上jsp相对于项目根的路径。重定向的方式在request域中的数据会失效，此时可以通过ModelAndView来传递数据，但是只能传递基本数据类型和String类型，因为spring mvc会将传递的数据以请求参数的方式放到url的后面，此时任何数据类型都会被转换为普通的字符串。另外，我们在jsp中取值的时候需要使用 EL 表达式中的请求参数param读取。</p> <p>除此之外，你还可以将数据放到HttpSession域中，这里就不演示了。</p> <p>1.重定向到页面</p> <pre class="has"><code class="language-java">/**  * 重定向返回ModelAndView对象  * @return  * @throws Exception  */ @RequestMapping("/redirectMAV.do") public ModelAndView redirectMAV(School school,String name)throws Exception{      ModelAndView mv = new ModelAndView();      //在重定向中可以使用ModelAndView传递数据，但是只能传递基本数据类型和String类型     mv.addObject("school",school);     mv.addObject("name", name);      //使用重定向，此时springmvc.xml配置文件中的视图解析器将会失效     mv.setViewName("redirect:/jsp/result.jsp");     return mv;</code></pre> <p>result.jsp</p> <pre class="has"><code class="language-html">&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %&gt; &lt;html&gt; &lt;head&gt;     &lt;title&gt;Title&lt;/title&gt; &lt;/head&gt; &lt;body&gt;  ${school.schoolName}&lt;br&gt; ${param.school.address}&lt;br&gt; ${param.name} &lt;/body&gt; &lt;/html&gt;</code></pre> <p>2，重定向到controller<br /> 在重定向到其他controller中的方法的时候，只要保证两者的参数名一致即可实现数据的传递。</p> <pre class="has"><code class="language-java">@RequestMapping("/redirectMAV.do") public ModelAndView redirectMAV(School school,String name)throws Exception{      ModelAndView mv = new ModelAndView();      mv.addObject("name", name);     mv.addObject("schoolName", school.getSchoolName());     mv.addObject("address", school.getAddress());      System.out.println(school.getAddress());     //使用重定向，此时springmvc.xml配置文件中的视图解析器将会失效     mv.setViewName("redirect:other.do");     return mv; }</code></pre> <pre class="has"><code class="language-java">RequestMapping("/other.do") public ModelAndView other(String name, School school)throws Exception{      ModelAndView mv = new ModelAndView();      //单个接收     mv.addObject("name", name);      //通过javabean对象接收     mv.addObject("school", school);      System.out.println(school.getAddress());     mv.setViewName("result");      return mv; }</code></pre> <h3 id="-string-">返回String类型的转发</h3> <p>这个整体上跟之前ModelAndView差不多，只不过在controller中的方法参数会被自动的放到request域中。</p> <pre class="has"><code class="language-java">@RequestMapping("/forwardStr.do") public String forwardStr(School school)throws Exception{      //默认会使用转发     //return "result";     //显式的使用转发     return "forward:/jsp/result.jsp"; }</code></pre> <p>result.jsp中直接通过request域获取数据，以下两种方式均可。</p> <p>${requestScope.school.schoolName}</p> <p>${school.schoolName}</p> <h3>返回String类型的重定向</h3> <p>这里要想传递数据的话，需要使用之前介绍过的Model实现，这里的数据同样会放在url中，所以只能传递基本数据类型和String类型。</p> <pre class="has"><code class="language-java">@RequestMapping("/redirectStr.do") public String redirectStr(School school, Model model)throws Exception{      //这里的数据同样会放在url中，所以只能传递基本数据类型和String类型     model.addAttribute("schoolName", school.getSchoolName());     model.addAttribute("address", school.getAddress());      return "redirect:/jsp/result.jsp"; }</code></pre> <p>result.jsp中需要通过param来获取数据：</p> <p>${param.schoolName}</p> <p>${param.address}</p> <p>这里转发和重定向跟之前返回ModelAndView的时候一样，所以就不演示了。</p> <h3 id="-void-">返回void的重定向和转发</h3> <p>当方法没有返回值即返回void的时候，重定向和转发操作都是使用的servlet的api，就是：<br /> 转发：</p> <pre class="has"><code class="language-java">request.getRequestDispatcher("/jsp/result.jsp").forward(request, response);</code></pre> <p>重定向：</p> <pre class="has"><code class="language-java">response.sendRedirect(request.getContextPath()+"/jsp/result.jsp");</code></pre> <p>***************************************</p> <p>@RequestMapping(value="/aa",method=RequestMethod.GET)</p> <p>public ModelAndView aaa (HttpServletRequest request) {<!-- --></p> <p>String user&nbsp; =&nbsp; request.getParameter("username");</p> <p>ModelAndView&nbsp; mv = new&nbsp;ModelAndView ("xyxyh/declaration/delcleView");</p> <p>mv.addObject("pas","bb"):</p> <p>return mv</p> <p>}</p> <pre><code class="language-java">@RequestMapping(value="/aa",method=RequestMethod.GET)  public ModelAndView aaa (HttpServletRequest request,ModelMap model) {  String user&nbsp; =&nbsp; request.getParameter("username");  ModelAndView&nbsp; mv = new&nbsp;ModelAndView ("xyxyh/declaration/delcleView");  mv.addObject("pas","bb"):  model.addAttribute("typeFlag","aaaaa"); return mv  }</code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-65716.htm">动物疫苗生产工艺流程 动物疫苗生产工艺流程图</a></p>
                                        <p>下一个：<a href="/news/article-66348.htm">成都市宠物领养平台有哪些（成都宠物领养网）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-30-clash-node-github.htm" title="1月30日最新机场订阅 | 18.7M/S|2025年SSR/Shadowrocket/Clash/V2ray免费节点地址链接分享">1月30日最新机场订阅 | 18.7M/S|2025年SSR/Shadowrocket/Clash/V2ray免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/news/article-45384.htm" title="免费宠物领养是不是真的假的（免费宠物领养是不是真的假的呢）">免费宠物领养是不是真的假的（免费宠物领养是不是真的假的呢）</a></li>
                        <li class="py-2"><a href="/news/article-46362.htm" title="浅谈分布式一致性协议之3PC">浅谈分布式一致性协议之3PC</a></li>
                        <li class="py-2"><a href="/news/article-60865.htm" title="专业卖狗的网站（专业卖狗的网站叫什么）">专业卖狗的网站（专业卖狗的网站叫什么）</a></li>
                        <li class="py-2"><a href="/news/article-45878.htm" title="反射 三种获得class对象的方式">反射 三种获得class对象的方式</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-5-free-ssr-subscribe.htm" title="3月5日最新机场订阅 | 22.7M/S|2025年Shadowrocket/SSR/Clash/V2ray免费节点地址链接分享">3月5日最新机场订阅 | 22.7M/S|2025年Shadowrocket/SSR/Clash/V2ray免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/news/article-40408.htm" title="开动物医院什么资质可以开药（开动物医院什么资质可以开药店）">开动物医院什么资质可以开药（开动物医院什么资质可以开药店）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-1-free-node-subscribe-links.htm" title="2月1日最新机场订阅 | 18.5M/S|2025年V2ray/Shadowrocket/Clash/SSR免费节点地址链接分享">2月1日最新机场订阅 | 18.5M/S|2025年V2ray/Shadowrocket/Clash/SSR免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-15-node-share-links.htm" title="2月15日最新机场订阅 | 18.5M/S|2025年Shadowrocket/Clash/SSR/V2ray免费节点地址链接分享">2月15日最新机场订阅 | 18.5M/S|2025年Shadowrocket/Clash/SSR/V2ray免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/news/article-42395.htm" title="动物防疫疫苗管理工作总结报告（动物疫苗管理员工作年度总结）">动物防疫疫苗管理工作总结报告（动物疫苗管理员工作年度总结）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">15</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">74</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
        
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container d-md-flex py-4">
            <div class="mr-md-auto text-center text-md-left">
                <div class="copyright">
                    <p>
                        <a href="/">首页</a> |
                        <a href="/free-node/">免费节点</a> |
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">Clash Bus免费订阅地址官方中文网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="credits"></div>
            </div>
            <div class="social-links text-center text-md-right pt-3 pt-md-0">
                <a href="#" class="twitter"><i class="bx bxl-twitter"></i></a>
                <a href="#" class="facebook"><i class="bx bxl-facebook"></i></a>
                <a href="#" class="instagram"><i class="bx bxl-instagram"></i></a>
                <a href="#" class="google-plus"><i class="bx bxl-skype"></i></a>
                <a href="#" class="linkedin"><i class="bx bxl-linkedin"></i></a>
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top"><i class="bx bx-up-arrow-alt"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/clashbus/jquery/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/clashbus/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/clashbus/jquery.easing/jquery.easing.min.js"></script>
    <script src="/assets/website/js/frontend/clashbus/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/clashbus/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/clashbus/counterup/counterup.min.js"></script>
    <script src="/assets/website/js/frontend/clashbus/owl.carousel/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/clashbus/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clashbus/venobox/venobox.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/clashbus/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>